{"version":3,"sources":["components/Product.tsx","components/Post.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Product","props","console","log","className","item","topic_name","topic_data","Button","Post","array","reverse","map","App","useState","name","setName","description","setdescription","action","type","placeholder","onChange","e","target","value","id","onClick","obj","push","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAmBeA,EAdC,SAACC,GAEb,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,4BAAIH,EAAMI,KAAKC,aACf,4BAAIL,EAAMI,KAAKE,gBAEnB,cAACC,EAAA,EAAD,CAAQJ,UAAU,SAAlB,oBACA,cAACI,EAAA,EAAD,CAAQJ,UAAU,SAAlB,wBCYGK,MAjBf,SAAcR,GACV,IAAMS,EAAQT,EAAMS,MAGpB,OAFAA,EAAMC,UACNT,QAAQC,IAAIO,GAGR,+BAECA,EAAME,KAAI,SAACP,GAAD,OACP,cAAC,EAAD,CAASA,KAAMA,UCbvBK,EAAM,CACR,CAACJ,WAAY,eAAgBC,WAAW,aACxC,CAACD,WAAY,aAAcC,WAAW,YAwCzBM,MArCf,WAAgB,IAAD,EAEUC,mBAAS,IAFnB,mBAENC,EAFM,KAEDC,EAFC,OAGwBF,mBAAS,IAHjC,mBAGNG,EAHM,KAGMC,EAHN,KAiBb,OACE,gCAEA,qBAAKd,UAAU,OAAf,SACA,uBAAMe,OAAO,IAAb,UACE,2CACA,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOC,QAAQA,MAAOV,IAC5F,kDACA,uBAAOK,KAAK,OAAOC,YAAY,eAAeK,GAAG,cAAcJ,SAAU,SAACC,GAAD,OAAML,EAAeK,EAAEC,OAAOC,QAAQA,MAAOR,IACtH,uBACA,cAACT,EAAA,EAAD,CAAQJ,UAAU,SAASuB,QAnBf,WACd,IAAIC,EAAI,CACJtB,WAAWS,EACXR,WAAWU,GAEfP,EAAMmB,KAAKD,GAPbE,OAAOC,SAASC,QAAO,IAqBnB,yBAIF,cAAC,EAAD,CAAMtB,MAAOA,QC3BFuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.461b1dd4.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {Button} from 'react-bootstrap';\n\n\nconst Product = (props:any) => {\n    console.log(props);\n    return (  \n        <div className=\"card\">\n            <div className=\"container\">\n                <p>{props.item.topic_name}</p>\n                <p>{props.item.topic_data}</p>\n            </div>\n            <Button className=\"button\" >Update</Button>\n            <Button className=\"button\">Delete</Button>\n        </div>\n    )\n}\n\nexport default Product\n","import { render } from '@testing-library/react';\nimport React,{useEffect} from 'react';\nimport {Button} from 'react-bootstrap';\nimport { isBindingName } from 'typescript';\nimport '../App.css';\nimport Product from './Product';\n\n\n\nfunction Post(props:any) {\n    const array = props.array;\n    array.reverse();\n    console.log(array);\n    return(\n        \n        <main>\n       \n        {array.map((item:any) => (\n            <Product item={item} />\n            //<Product post={item} />\n        ))}\n        </main>\n    );\n    \n}\n\nexport default Post\n","import React, {useState} from 'react';\nimport './App.css';\nimport Post from './components/Post';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'react-bootstrap';\nlet array=[\n  {topic_name: 'Akshat Goyal', topic_data:'Good boy '},\n  {topic_name: 'Daksh Garg', topic_data:'Bad Boy'},\n];\n\nfunction App() {\n  \n  const [name,setName] = useState(\"\");\n  const [description,setdescription] = useState(\"\");\n\n  function refreshPage() {\n  window.location.reload(false);\n  }\n const onSubmit = () =>{\n    let obj={\n        topic_name:name,\n        topic_data:description\n    }\n    array.push(obj);\n    refreshPage();   \n  }\n  \n  return (\n    <div>\n    \n    <div className=\"card\">\n    <form action=\"#\">\n      <p>Enter Name</p>\n      <input type=\"text\" placeholder=\"Full Name\" onChange={(e) => setName(e.target.value)} value={name} />\n      <p>Enter Description</p>\n      <input type=\"text\" placeholder=\"Description'\" id=\"description\" onChange={(e)=> setdescription(e.target.value)} value={description} />\n      <br />\n      <Button className=\"button\" onClick={onSubmit}>Submit</Button>\n    </form>\n    \n    </div>\n    <Post array={array} />\n    </div>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}